(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[931],{8527:function(e,t,r){Promise.resolve().then(r.bind(r,5003))},5003:function(e,t,r){"use strict";r.r(t),r.d(t,{default:function(){return u}});var a=r(7437),s=r(6691),i=r.n(s),n=r(1192),o=r.n(n),d=r(7712),l=r(3136),h=r(4327),c=r(2265);let p={visible:{opacity:1,x:0,transition:{duration:.8}},hidden:{opacity:0,x:-500}},_={visible:{opacity:1,x:0,transition:{duration:.8}},hidden:{opacity:0,x:1e3}},g=!1,m=!1;function u(){let e=(0,d._)(),[t,r]=(0,h.YD)();(0,c.useEffect)(()=>{r&&!g?(e.start("visible"),g=!0):g||e.start("hidden")},[e,r]);let s=(0,d._)(),[n,u]=(0,h.YD)();return(0,c.useEffect)(()=>{u&&!m?(s.start("visible"),m=!0):m||s.start("hidden")},[s,u]),(0,a.jsxs)("main",{className:o().main,children:[(0,a.jsx)("div",{className:o().center,children:(0,a.jsxs)("div",{className:o().welcome,children:[(0,a.jsx)("h1",{children:"Hi there, I&pos;m Cole"}),(0,a.jsxs)("p",{children:["A passionate developer who loves to make blazingly fast software and everything lower level. I mainly program in Rust but I also have experience with Java, Python and JavaScript/TypeScript. You can check out my ",(0,a.jsx)("a",{href:"https://github.com/Colepng",children:"GitHub"})," here and if you want to read about my random programming adventures check out my ",(0,a.jsx)("a",{href:"https://blog.colepng.com",children:"blog"}),".",(0,a.jsx)("br",{}),"(I use Arch btw)"]}),(0,a.jsx)("div",{className:o().links})]})}),(0,a.jsx)("div",{className:o().about_me}),(0,a.jsxs)("div",{className:o().projects,children:[(0,a.jsx)("div",{className:o().keyboard_rs,children:(0,a.jsxs)(l.E.div,{ref:t,variants:p,animate:e,initial:"hidden",className:o().keyboard_rs,children:[(0,a.jsx)(i(),{src:"/keyboard.jpeg",alt:"photo of the keyboard",className:o().keyboard_photo,width:1213,height:648,priority:!0}),(0,a.jsxs)("div",{className:o().keyboard_text,children:[(0,a.jsx)("h1",{children:"keyboard-rs"}),(0,a.jsxs)("p",{children:["keyboard-rs is an open-source keyboard firmware written in Rust. It allows users to not have to worry about cryptic compiler errors and just focus on their keymap. Currently keyboard-rs only works with a keyboard running off of a rp2040 but with plans on moving from ",(0,a.jsx)("a",{href:"https://crates.io/crates/rp2040-hal",children:"rp2040-hal"})," to",(0,a.jsx)("a",{href:"https://crates.io/crates/embedded-hal",children:"embedded-hal"}),", this would allow for any chip that has an embedded-hal implementation including the rp2040. The only other additional feature that is implemented is rotary encoder support.",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),"The image on the right is of ",(0,a.jsx)("a",{href:"https://github.com/Colepng/late-night-engineering",children:"late night engineering"}),", a keyboard I designed for my computer engineering class."]})]})]})}),(0,a.jsx)("div",{className:o().streaming_rs,children:(0,a.jsxs)(l.E.div,{ref:n,variants:_,animate:s,initial:"hidden",className:o().streaming_rs,children:[(0,a.jsxs)("div",{className:o().streaming_text,children:[(0,a.jsx)("h1",{children:"streaming-rs"}),(0,a.jsx)("b",{children:"WARNING VERY ACTIVE DEVLOPEMNT, INFORMATION MAY BE OUT DATED."}),(0,a.jsxs)("p",{children:["streaming-rs is a full streaming service written in Rust. There 2 main parts, the server and the client. Let&pos;s start with the server, the server as of September 14th, 2023 is very simple, the client sends a song Spotify ID, and the server sends the file back. If the server doesn&pos;t have the file locally it downloads the song using ",(0,a.jsx)("a",{href:"https://github.com/spotDL/spotify-downloader",children:"spotDL"})," and sends the file once it is done. Now the client, there is a library provided by streaming-rs which is used to make clients for the server. There are currently 2 clients, a command line and a TUI, with a planned GUI. The client library currently has the following features, a library, downloading songs, searching songs, playlist and built-in shuffle."]})]}),(0,a.jsx)(i(),{src:"/tui.png",alt:"photo of the keyboard",className:o().tui_photo,width:840,height:525,priority:!0})]})})]})]})}},1192:function(e){e.exports={main:"page_main__GlU4n",description:"page_description__86bsR",keyboard_photo:"page_keyboard_photo__Xvfd_",streaming_rs:"page_streaming_rs__w7Bdr",keyboard_rs:"page_keyboard_rs__fR0IR",streaming_text:"page_streaming_text__XSWiw",keyboard_text:"page_keyboard_text__VVHgn",code:"page_code__9lUUd",grid:"page_grid__f5Kdy",card:"page_card__QV0Om",break:"page_break__sON9o",center:"page_center__5oHG7",logo:"page_logo__7fc9l",content:"page_content__kDoxQ",vercelLogo:"page_vercelLogo__rOY_u",rotate:"page_rotate__durgN"}}},function(e){e.O(0,[943,971,596,744],function(){return e(e.s=8527)}),_N_E=e.O()}]);